@startuml nat-peer-session-verification
title NAT Peer Session Verification via Relay

participant "PeerManager" as PM
participant "QUICPeer" as QUIC
participant "RelayPeer" as RP
participant "RelayDB" as RDB
participant "RelayMemory" as MEM

== NAT Peer Reachability Check ==
PM -> PM: verifyPeerReachability(natPeerMetadata)
note right: NAT peer using relay

PM -> PM: Extract relayNodeID from metadata.ConnectedRelay

PM -> PM: Get relay peer metadata from DB

== Step 1: Verify Relay is Reachable ==
PM -> QUIC: Ping(relayEndpoint)
QUIC -> RP: QUIC Ping message
RP --> QUIC: Pong response
QUIC --> PM: Success
note right: Relay is reachable

== Step 2: Query Relay for NAT Peer Session ==
PM -> QUIC: QueryRelayForSession(relayAddr, natPeerID, queryNodeID)

QUIC -> RP: Open QUIC stream
QUIC -> RP: MessageTypeRelaySessionQuery
note left: Contains: clientNodeID, queryNodeID

RP -> RP: handleRelaySessionQuery()

== Step 3: Check Database for Session ==
RP -> RDB: HasActiveSession(clientNodeID)
RDB -> RDB: SELECT from relay_sessions\nWHERE client_node_id = ?\nAND status = 'active'

alt Session found in DB
    RDB --> RP: (true, sessionID)

    == Step 4: Verify Session in Memory ==
    RP -> MEM: Check sessions[sessionID]

    alt Session exists in memory
        MEM --> RP: session object
        RP -> RP: Get session.LastKeepalive

        alt Keepalive is recent
            RP -> QUIC: MessageTypeRelaySessionStatus
            note left: hasSession=true\nsessionActive=true\nlastKeepalive=timestamp
            QUIC --> PM: true
            note right: NAT peer has active session
            PM -> PM: Mark NAT peer as reachable

        else Keepalive is stale
            RP -> QUIC: MessageTypeRelaySessionStatus
            note left: hasSession=true\nsessionActive=false
            QUIC --> PM: false
            note right: Session exists but inactive
            PM -> PM: Mark NAT peer as unreachable
        end

    else Session not in memory
        RP -> QUIC: MessageTypeRelaySessionStatus
        note left: hasSession=true\nsessionActive=false
        QUIC --> PM: false
        note right: Stale DB entry
        PM -> PM: Mark NAT peer as unreachable
    end

else No session in DB
    RDB --> RP: (false, "")
    RP -> QUIC: MessageTypeRelaySessionStatus
    note left: hasSession=false\nsessionActive=false
    QUIC --> PM: false
    note right: No session found
    PM -> PM: Mark NAT peer as unreachable
end

@enduml
